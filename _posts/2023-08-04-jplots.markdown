---
layout: post
title: "Graphs with Highcharts"
date: 2023-08-04
categories: software
---

Charts in javascript (highcharts) can be quite powerful. Select or drag and drop a csv file  in the button below. 

This page load the csv and plot all the data in the chart on top, and the individual variables (up to 10) in the plots below.

<br/>

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
<script src="http://code.highcharts.com/highcharts.js"></script>

<div>
    <input type="file" accept=".csv" onchange="readCSVFile()" value="test.csv" onload="readCSVFile()"/>
    <p class="content"></p>
</div>

<br/><br/>


<h1> All Data in one plots</h1>
<div id="container" style="min-width: 310px; height: 600px; margin: 0 auto"> </div><br/>
<h1 id="individual"> </h1>
<div id="container1" style="min-width: 310px; height: 400px; margin: 0 auto"> </div><br/>
<div id="container2" style="min-width: 310px; height: 400px; margin: 0 auto"> </div><br/>
<div id="container3" style="min-width: 310px; height: 400px; margin: 0 auto"> </div><br/>
<div id="container4" style="min-width: 310px; height: 400px; margin: 0 auto"> </div><br/>
<div id="container5" style="min-width: 310px; height: 400px; margin: 0 auto"> </div><br/>
<div id="container6" style="min-width: 310px; height: 400px; margin: 0 auto"> </div><br/>
<div id="container7" style="min-width: 310px; height: 400px; margin: 0 auto"> </div><br/>
<div id="container8" style="min-width: 310px; height: 400px; margin: 0 auto"> </div><br/>
<div id="container9" style="min-width: 310px; height: 400px; margin: 0 auto"> </div><br/>
<div id="container10" style="min-width: 310px; height: 400px; margin: 0 auto"> </div><br/>

<script type="text/javascript">

function readCSVFile() {

	const content = document.querySelector(".content");
	const [file] = document.querySelector("input[type=file]").files;
	const reader = new FileReader();

	// fill id = "individual" with the titles of the plots
	document.getElementById("individual").innerHTML = "Individual plots " ;

	for ( var i = 1; i < 11; i++) {
		container = "#container" + i;
		// hide container
		$(container).hide();
	}

	reader.addEventListener(
		"load",
		() => {
			// reader.result is not null here
			numbers_of_plots = countPlots(reader.result);
			titles = plot_titles(reader.result);
			xdata = plot_data_for_column(0, reader.result);

			update(titles, reader.result);

			// run addDataToChart for each plot
			for (var i = 0; i < numbers_of_plots; i++) {
				//alert(titles[i]);
				ydata = plot_data_for_column(i+1, reader.result);
				//alert(ydata);
				addDataToChart( i+1, titles[i], xdata, ydata);
			}
		},
		false,
	);

	if (file) {
		reader.readAsText(file);
	}

}


function countPlots(data) {
	if (data == null) {
		return "No data";
	}
	var lines = data.split('\n');
	var columns = lines[0].split(',');
	return columns.length - 1;
}

function plot_titles(data) {
	if (data == null) {
		return "No data";
	}
	var lines = data.split('\n');
	var columns = lines[0].split(',').slice(1);
	//alert(columns);
	return columns;
}

function plot_data_for_column(column, data) {
	if (data == null) {
		return "No data";
	}
	// return the column data
	
	var lines = data.split('\n');
	var column_data = [];
	for (var i = 0; i < lines.length; i++) {
		var line = lines[i].split(',');
		column_data.push(line[column]);
	}
	return column_data.slice(1);
}

function addDataToChart(cid, title, xdata, ydata) {


	
	container = "#container" + cid;
 	
	// remove all series first
	$(container).show();

    $(container).highcharts ({

        title: {
                text: title,
                x: -20 // center
            },

            xAxis: {
                categories: xdata
            },

            yAxis: {
                title: {
                    text: ''
                },
                plotLines: [{
                    value: 0,
                    width: 1,
                    color: '#808080'
                }]
            },

            series: [ {
                name: title,
                data: ydata.map(Number)
            }]

        });

}


function update(title, data) {

 	var seriesLength = chart.series.length;
	for(var i = seriesLength - 1; i > -1; i--) { 
		chart.series[i].remove();
	}

	chart.setTitle({text: 'All Data in one plots'});
	chart.setSubtitle({text: ''});

	numbers_of_plots = countPlots(data);

	for (var p = 0; p < numbers_of_plots; p++) {

		column_data = plot_data_for_column(p+1, data);

		// Create a new series row
		var row = [];
		for (i = 1; i <column_data.length; i++) {
			row.push(parseFloat(column_data[i]));
		}

		// Append new series to the chart
		chart.addSeries({ name:title[p], data:row });
	}
}

var chart = null;

chart = Highcharts.chart('container', {
    title: {
        text: 'Monthly Average Temperature',
        x: -20 //center
    },
    subtitle: {
        text: 'Source: WorldClimate.com',
        x: -20
    },
    xAxis: {
        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
            'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
    },
    yAxis: {
        title: {
            text: 'Temperature (°C)'
        },
        plotLines: [{
            value: 0,
            width: 1,
            color: '#808080'
        }]
    },
    tooltip: {
        valueSuffix: '°C'
    },
    legend: {
        layout: 'vertical',
        align: 'right',
        verticalAlign: 'middle',
        borderWidth: 0
    },
    series: [{
        name: 'Tokyo',
        data: [7.0, 6.9, 9.5, 14.5, 18.2, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9, 9.6]
    }, {
        name: 'New York',
        data: [-0.2, 0.8, 5.7, 11.3, 17.0, 22.0, 24.8, 24.1, 20.1, 14.1, 8.6, 2.5]
    }, {
        name: 'Berlin',
        data: [-0.9, 0.6, 3.5, 8.4, 13.5, 17.0, 18.6, 17.9, 14.3, 9.0, 3.9, 1.0]
    }, {
        name: 'London',
        data: [3.9, 4.2, 5.7, 8.5, 11.9, 15.2, 17.0, 16.6, 14.2, 10.3, 6.6, 4.8]
    }]
});

</script>
